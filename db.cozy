
sqlite3 = require('sqlite3').verbose!

class MoeDB

    constructor: (@db_path) ->
        @db = new sqlite3.Database(@db_path)

        @sql_all_definitions = () ->
            """SELECT id, def 
            FROM definitions;"""

        @sql_all_titles = () ->
            """SELECT title
            FROM entries;"""
 
        @sql_only_title = (query) ->
            """SELECT title
            FROM entries
            WHERE title LIKE '#{query}%';"""
 
        @sql = (col, query) ->
            """SELECT '' || title || '\t' || heteronyms.bopomofo || '\n» ' || group_concat(
              def, '\n» '
            ) || '\n' as result, title, radical, stroke_count, non_radical_stroke_count,
            bopomofo, bopomofo2, pinyin, group_concat(type, '\n') as type, group_concat(def, '\n') as def,
            group_concat(example, '\n') as example, group_concat(quote, '\n') as quote,
            group_concat(link, '\n') as link
            FROM entries
            JOIN heteronyms ON entry_id = entries.id
            JOIN (
                SELECT heteronym_id,
                    CASE WHEN example is NULL or example is '' THEN ' ' ELSE example END as example,
                    CASE WHEN quote is NULL or quote is '' THEN ' ' ELSE quote END as quote,
                    CASE WHEN def is NULL or def is '' THEN ' ' ELSE def END as def,
                    CASE WHEN type is NULL or type is '' THEN ' ' ELSE type END as type,
                    CASE WHEN link is NULL or link is '' THEN ' ' ELSE link END as link
                FROM definitions
            ) ON heteronym_id = heteronyms.id
            WHERE #{col} LIKE '#{query}'
            GROUP BY title, heteronyms.bopomofo;"""

        @sql_by_title = @sql('title', _)
        @sql_by_def = @sql('def', _)

        @def_cb = (err, row) ->
            console.log(row)
            console.log(row.result)

    get_all_definitions: (cb = @def_cb) ->
        @find_each(@sql_all_definitions!, cb)

    get_all_titles: (cb = @def_cb) ->
        @find_all(@sql_all_titles!, cb)
 
    find_by_title: (title, cb = @def_cb) ->
        @find_each(@sql_by_title(title), cb)

    find_by_def: (def, cb = @def_cb) ->
        @find_each(@sql_by_def(def), cb)
 
    find_all_titles_by_title: (title, cb = @def_cb) ->
        @find_all(@sql_only_title(title), cb)
 
    find_all_by_title: (title, cb = @def_cb) ->
        @find_all(@sql_by_title(title), cb)

    find_all_by_def: (def, cb = @def_cb) ->
        @find_all(@sql_by_def(def), cb)
 
    find_all: (sql, cb) -> 
        if @db?
            () <~ @db.serialize!
                (err, rows) <- @db.all(sql, _)
                    cb(err, rows)
 
    find_each: (sql, cb) ->
        if @db?
            () <~ @db.serialize!
                (err, row) <- @db.each(sql, _)
                    cb(err, row)

    update_def: (id, new_def) ->
        if @db?
            () <~ @db.serialize!
                @db.run("UPDATE definitions SET def = '#{new_def}' WHERE id = #{id};")

    close: () ->
        @db.close!

exports.MoeDB = MoeDB


